name: "Compliance Scans"

on:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - "docs/**"
      - ".github/**"
      - "**.md"
      - "**.txt"

  push:
    branches: [ main ]

  release:
    types:
      - created
      - edited

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  SDLScans:
    name: SDL required scan
    runs-on: [rag-runner]
    environment: default
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    steps:
      - name: Clean Up Working Directory
        run: sudo rm -rf ${{github.workspace}}/*

      - uses: intel-innersource/frameworks.actions.certs@latest

      - name: Collect credentials from Conjur
        uses: intel-innersource/frameworks.actions.conjur-fetch@v1
        with:
          host_id: host/github-apps-oidc/43211-raglabel
          secrets: >
            FMSPAMVLT101/LOBUSER_prapp/AAM-DV-43211-ENTERPRISEAIRA/Operating System-UnmanagedAccounts-AllOSs-sys_cicd/username|CONJUR_SDL_USERNAME;
            FMSPAMVLT101/LOBUSER_prapp/AAM-DV-43211-ENTERPRISEAIRA/Operating System-UnmanagedAccounts-AllOSs-sys_cicd/password|CONJUR_SDL_PASSWORD

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: repo

      - name: SDLE Evidence upload flag
        id: submit
        run: |
          if [ ${{ github.event_name }} == 'release' ]; then
            echo "submit=true" >> "$GITHUB_OUTPUT"
          else
            echo "submit=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Archive repo
        run: zip -r repo.zip repo/* -x ".git/*" ".github/*"

      - name: SDLe Scans
        id: compliance
        uses: intel-innersource/frameworks.actions.idf-central-scan@v1
        with:
          config: repo/.github/BuildConfig.json
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          # compilation_scan: ''
          binary: 'repo.zip'
          output_directory: ${{ github.WORKSPACE }}/scans_results
          sdle: ${{ steps.submit.outputs.submit || false }}
          logfile: IDF_Scans_Results_${{ github.run_id }}.log
        env:
           IDFC_USER: ${{ env.CONJUR_SDL_USERNAME }}@intel.com
           IDFC_PASSWORD: ${{ env.CONJUR_SDL_PASSWORD }}
           IDFC_STORAGE_USER: ${{ env.CONJUR_SDL_USERNAME }}
           IDFC_STORAGE_PASS: ${{ env.CONJUR_SDL_PASSWORD }}

      - name: Check results
        id: results
        env:
          SCAN_SUMMARY: ${{ github.WORKSPACE }}/scans_results/results/scan_sumary.json
        run: |
          if ! [ -f ${SCAN_SUMMARY} ]; then
            echo "Scan summary not found. Try again. If this persists verify BuildConfig.json is correct."
            exit 1
          fi

          exit_code=0
          scan_failures=$(jq ' .scans | to_entries | map(select(.value.failures | tonumber > 0) | .key)' ${SCAN_SUMMARY})
          scan_errors=$(jq ' .scans | to_entries | map(select(.value.errors | tonumber > 0) | .key)' ${SCAN_SUMMARY})

          if [ "$scan_failures" != "[]" ]; then
            echo "Detected security issues in:"
            echo "##################################################"
            echo "$scan_failures"
            echo "##################################################"
            echo "Download IDF_Scans_Results_${{ github.run_id }} for more details."
            exit_code=1
          fi
          if [ "$scan_errors" != "[]" ]; then echo "Scans $scan_errors failed. Try again"; exit_code=1; fi

          exit $exit_code

      - uses: actions/upload-artifact@v4
        id: upload-results
        if: ${{ !cancelled() }}
        with:
          name: IDF_Scans_Results_${{ github.run_id }}
          path: ${{ github.WORKSPACE }}/scans_results
          if-no-files-found: error
          retention-days: 60

  bandit:
    runs-on: [rag-runner]
    name: Bandit
    container:
      image: cache-registry.caas.intel.com/cache/library/python:slim
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Bandit
        id: bandit
        uses: intel-innersource/frameworks.actions.bandit@v1.3

  trivy:
    runs-on: [rag-runner]
    name: Trivy fs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: intel-innersource/frameworks.actions.trivy@main
        with:
          TRIVY_REPORT_FORMAT: 'json'
          TRIVY_SCAN_TYPE: 'fs'
          TRIVY_OUTPUT_FILE: 'trivy_fs_report_${{ github.sha }}.json'
          TRIVY_SCAN_PATH: '.'
          TRIVY_EXIT_CODE: '1'
          TRIVY_VULN_TYPE: 'os,library'
          TRIVY_SEVERITY: 'CRITICAL,HIGH'
          TRIVY_CUSTOM_PARAMS: "--debug --list-all-pkgs"

      - name: Upload artifacts - csv
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: "trivy_fs_report_${{ github.sha }}"
          path: "trivy_fs_report_${{ github.sha }}.json"
