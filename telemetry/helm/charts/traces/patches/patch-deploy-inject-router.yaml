spec:
  template:
    ### Those lines below are only for trying golang zero-code auto-instrumenation - currently some traces/logs are manually instrumented.
    # There are some issues with golang autoinstrumenation:
    # - requires exactly golang 1.22.0 based image
    # - not enough control on created spans
    # Enabling this requires modification of
    # metadata:
    #   annotations:
    #     instrumentation.opentelemetry.io/inject-go: "true"
    #     instrumentation.opentelemetry.io/otel-go-auto-target-exe: "/router"
    spec:
      containers:
      - name: router-server
        env:
        - name: OTEL_LOGS_GRPC_ENDPOINT
          value: "otelcol-traces-collector.monitoring-traces:4317"

        # This is enabled by default already in deployment/microservices-connector/config/gmcrouter/gmc-router.yaml
        # - name: OTEL_EXPORTER_OTLP_ENDPOINT
        #   value: "http://otelcol-traces-collector.monitoring-traces:4318"

        # - name: OTEL_SERVICE_NAME
        #   value: "router-service" # the same as default router.go:OtelServiceName

        # Disabled generating traces from router-service
        # - name: OTEL_TRACES_DISABLED
        #   value: "false" # DEFAULT
        #   #value: "true"

        # Enable traces exporter to console (for debugging purposes)
        # - name: OTEL_TRACES_CONSOLE_EXPORTER
        #   # value: "true"
        #   value: "false" # DEFAULT


        # NOT SUPPORTED by router-service by GoSDK
        # https://github.com/open-telemetry/opentelemetry-go/issues/3559
        # - name: OTEL_SDK_DISABLED
        #   value: "true"

        # NOT SUPPORTED by router-service by GoSDK
        # https://github.com/open-telemetry/opentelemetry-specification/blob/main/spec-compliance-matrix.md#environment-variables
        # - name: OTEL_LOG_LEVEL
        #   value: DEBUG
